# SAFT Doctor - Push to GitHub Script
# Este script facilita o push inicial do projeto para o GitHub

Write-Host "üè• SAFT Doctor - GitHub Push Helper" -ForegroundColor Cyan
Write-Host "====================================`n" -ForegroundColor Cyan

# Verificar se estamos no diret√≥rio correto
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå Erro: Este script deve ser executado na raiz do projeto git" -ForegroundColor Red
    exit 1
}

# Verificar se j√° existe remote
$remotes = git remote
if ($remotes -contains "origin") {
    Write-Host "‚ö†Ô∏è  Remote 'origin' j√° existe:" -ForegroundColor Yellow
    git remote -v
    Write-Host ""
    $resposta = Read-Host "Deseja remover e reconfigurar? (s/n)"
    if ($resposta -eq "s" -or $resposta -eq "S") {
        git remote remove origin
        Write-Host "‚úÖ Remote removido" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è  Mantendo configura√ß√£o atual" -ForegroundColor Blue
        exit 0
    }
}

# Solicitar URL do reposit√≥rio
Write-Host "`nüìù Por favor, crie um reposit√≥rio no GitHub:" -ForegroundColor Cyan
Write-Host "   1. V√° para https://github.com/new" -ForegroundColor White
Write-Host "   2. Nome do reposit√≥rio: saft-doctor" -ForegroundColor White
Write-Host "   3. N√ÉO inicialize com README, .gitignore ou LICENSE" -ForegroundColor Yellow
Write-Host "   4. Clique em 'Create repository'`n" -ForegroundColor White

$repoUrl = Read-Host "Cole a URL do reposit√≥rio (ex: https://github.com/usuario/saft-doctor.git)"

if ([string]::IsNullOrWhiteSpace($repoUrl)) {
    Write-Host "‚ùå URL n√£o pode estar vazia" -ForegroundColor Red
    exit 1
}

# Adicionar remote
Write-Host "`nüîó Adicionando remote origin..." -ForegroundColor Cyan
git remote add origin $repoUrl

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Remote adicionado com sucesso" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro ao adicionar remote" -ForegroundColor Red
    exit 1
}

# Mostrar branches dispon√≠veis
Write-Host "`nüìã Branches dispon√≠veis:" -ForegroundColor Cyan
git branch

# Fazer push da branch main
Write-Host "`nüöÄ Fazendo push da branch main..." -ForegroundColor Cyan
git push -u origin main

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Branch main enviada com sucesso" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro ao fazer push da branch main" -ForegroundColor Red
    exit 1
}

# Fazer push da branch develop
Write-Host "`nüöÄ Fazendo push da branch develop..." -ForegroundColor Cyan
git push -u origin develop

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Branch develop enviada com sucesso" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Branch develop n√£o foi enviada (pode n√£o existir)" -ForegroundColor Yellow
}

# Instru√ß√µes finais
Write-Host "`nüéâ Push conclu√≠do com sucesso!" -ForegroundColor Green
Write-Host "`nüìã Pr√≥ximos passos:" -ForegroundColor Cyan
Write-Host "   1. Acesse: $repoUrl" -ForegroundColor White
Write-Host "   2. Clique em 'Pull requests' ‚Üí 'New pull request'" -ForegroundColor White
Write-Host "   3. Base: main ‚Üê Compare: develop" -ForegroundColor White
Write-Host "   4. Use o conte√∫do de .github/pr-description.md como descri√ß√£o" -ForegroundColor White
Write-Host "   5. Revise e submeta o PR!" -ForegroundColor White

Write-Host "`nüìù Comandos √∫teis:" -ForegroundColor Cyan
Write-Host "   Ver PR description: cat .github/pr-description.md" -ForegroundColor White
Write-Host "   Criar PR via CLI: gh pr create --base main --head develop" -ForegroundColor White
Write-Host "   Ver reposit√≥rio: git remote -v" -ForegroundColor White

Write-Host "`n‚ú® Happy coding! üöÄ" -ForegroundColor Green